name: Release Wheels

on:
  push:
    tags:
      - 'v*'

permissions:
  actions: read
  contents: write
  id-token: write

jobs:
  wheels:
    name: Build ${{ matrix.os }} / py${{ matrix.py }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        py: ["3.11","3.12","3.13","3.14"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install maturin
        run: pip install maturin==1.*
      - name: Build wheels (CPU+WGPU)
        run: |
          maturin build -m bindings/st-py/Cargo.toml --release --features wgpu,logic,kdsl
      - name: Upload wheels (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.py }}
          path: target/wheels/*.whl

  attach:
    name: Attach wheels to GitHub Release
    needs: wheels
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Generate checksums for release wheels
        run: |
          set -euo pipefail
          find dist -type f -name '*.whl' -print0 | sort -z | xargs -0 -I{} sh -c 'sha256sum "{}" | sed "s|  .*|  $(basename "{}")|"' > dist/wheels.sha256
          find dist -type f -name '*.whl' -print0 | sort -z | xargs -0 -I{} sh -c 'sha512sum "{}" | sed "s|  .*|  $(basename "{}")|"' > dist/wheels.sha512
      - name: Generate SBOM for release payload
        uses: anchore/sbom-action@v0.16.0
        with:
          path: dist
          format: cyclonedx-json
          output-file: dist/spiraltorch-${{ github.ref_name }}-sbom.cdx.json
          artifact-name: spiraltorch-${{ github.ref_name }}-sbom
          upload-release-assets: false
      - name: Generate authenticated release manifest
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          python - <<'PY'
          import hashlib
          import json
          import os
          from datetime import datetime, timezone
          from pathlib import Path

          base = Path("dist")
          tag = os.environ["RELEASE_TAG"]

          def digest(path: Path, algorithm: str) -> str:
              h = hashlib.new(algorithm)
              with path.open("rb") as fh:
                  for chunk in iter(lambda: fh.read(1024 * 1024), b""):
                      h.update(chunk)
              return h.hexdigest()

          files = []
          for path in sorted(p for p in base.rglob("*") if p.is_file() and path.suffix not in {".sig", ".crt", ".intoto", ".jsonl"}):
              sha256 = digest(path, "sha256")
              sha512 = digest(path, "sha512")

              files.append(
                  {
                      "asset": path.name,
                      "source_path": path.as_posix(),
                      "size": path.stat().st_size,
                      "sha256": sha256,
                      "sha512": sha512,
                  }
              )

          manifest = {
              "schema": "https://spiraltorch.org/security/release-manifest/v1",
              "tag": tag,
              "generated_at": datetime.now(tz=timezone.utc).isoformat(),
              "workflow": "Release Wheels",
              "files": files,
          }

          output = base / f"spiraltorch-{tag}-manifest.json"
          output.write_text(json.dumps(manifest, indent=2, sort_keys=True) + "\n", encoding="utf-8")
          PY
      - name: Generate SLSA provenance for wheels
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/**/*.whl'
      - name: Sign release artifacts with Sigstore
        uses: sigstore/gh-action-sigstore@v2.3.1
        with:
          inputs: |
            dist/**/*.whl
            dist/*.sha256
            dist/*.sha512
            dist/*.json
      - name: Create/Update GitHub Release with assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*
