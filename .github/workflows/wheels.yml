name: Build Wheels

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  macos-universal2:
    runs-on: macos-14
    strategy:
      matrix: { python: ["3.10","3.11","3.12","3.13","3.14"] }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python }} }
      - run: pip install maturin
      - run: maturin build --release --universal2 -m bindings/st-py/pyproject.toml --features mps
      - uses: actions/upload-artifact@v4
        with: { name: wheels-macos-universal2-${{ matrix.python }}, path: target/wheels/*.whl }

  linux-musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix: { arch: [x86_64, aarch64], python: ["3.10","3.11","3.12","3.13","3.14"] }
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.arch }}
          manylinux: musllinux_1_2
          args: --release -m bindings/st-py/pyproject.toml
      - uses: actions/upload-artifact@v4
        with: { name: wheels-musllinux-${{ matrix.arch }}-${{ matrix.python }}, path: wheelhouse/*.whl }

  publish-pypi:
    needs: [macos-universal2, linux-musllinux]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist }
      - uses: pypa/gh-action-pypi-publish@v1.10.3
        with: { password: ${{ secrets.PYPI_API_TOKEN }}, packages_dir: dist }
