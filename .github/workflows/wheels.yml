name: Build Wheels
on:
  push:
    tags: ["v*"]
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14]
    env:
      CIBW_BUILD_VERBOSITY: 1
      CIBW_SKIP: "pp* *_i686 *-win32 *-manylinux_i686"
      CIBW_TEST_SKIP: "*-musllinux_* *-manylinux_*"
      CIBW_BEFORE_BUILD: "pip install maturin==1.*"
      CIBW_ENVIRONMENT: >-
        MATURIN_PEP517=1
        RUSTFLAGS="-C target-cpu=native"
        ST_DEVICE_AUTO_PRIORITIES="wgpu,cuda,mps,cpu"
        SPIRAL_HEUR_SOFT=1
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.*

      - name: Build wheels
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-* cp314-*"
          CIBW_ARCHS_MACOS: "universal2"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_AARCH64_IMAGE: "manylinux_2_28"
          CIBW_MUSLLINUX_X86_64_IMAGE: "musllinux_1_2"
          CIBW_MUSLLINUX_AARCH64_IMAGE: "musllinux_1_2"
        run: python -m cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  sdist:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist -o dist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
